generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id             String      @id @default(auto()) @map("_id") @db.ObjectId
    role           String?
    name           String
    email          String      @unique
    status         Boolean
    password       String
    church         String?
    profilePicture String?
    created_at     DateTime?   @default(now())
    updated_at     DateTime?   @default(now()) @updatedAt
    userClasses    UserClass[]

    @@map("user")
}

model Class {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    created_at  DateTime?   @default(now())
    updated_at  DateTime?   @default(now()) @updatedAt
    teachers    String
    coverImage  String
    lessons     Lesson[]
    userClasses UserClass[]

    @@map("classes")
}

model UserClass {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    userId  String @db.ObjectId
    classId String @db.ObjectId
    user    User   @relation(fields: [userId], references: [id])
    class   Class  @relation(fields: [classId], references: [id])

    @@unique([userId, classId])
}

model Lesson {
    id             String           @id @default(auto()) @map("_id") @db.ObjectId
    name           String
    created_at     DateTime?        @default(now())
    updated_at     DateTime?        @default(now()) @updatedAt
    teacher        String
    coverImage     String
    lessonLink     String
    classId        String?          @db.ObjectId
    class          Class?           @relation(fields: [classId], references: [id])
    TheoryMaterial TheoryMaterial[]

    @@map("lessons")
}

model TheoryMaterial {
    id       String  @id @default(auto()) @map("_id") @db.ObjectId
    name     String
    fileUrl  String
    fileType String
    lessonId String? @db.ObjectId
    lesson   Lesson? @relation(fields: [lessonId], references: [id])

    @@map("theory_materials")
}
